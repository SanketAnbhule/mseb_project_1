import React from 'react'

export default function Temp() {
  return (
    <div>
      
    serialNumber  :state.serialNumber,
    flyingSquadUnit  :state.flyingSquadUnit,
    theftDetectedBy  :state.theftDetectedBy,
    place  :state.place,
    consumerNumber  :state.consumerNumber,
    buNumber  :state.buNumber,
    name  :state.name,
    address  :state.address,
    nameOfOwner  :state.nameOfOwner,
    contactNumber  :state.contactNumber,
    category  :state.category,
    typeOfInstallation  :state.typeOfInstallation,
    tariffDetails  :state.tariffDetails,
    sanctionedLoad  :state.sanctionedLoad,
    connectedLoad  :state.connectedLoad,
    normalWorkingHours  :state.normalWorkingHours,
    nameOfBillingOffice  :state.nameOfBillingOffice,
    meterSerialNumber  :state.meterSerialNumber,
    make  :state.make,
    capacity  :state.capacity,
    externalCtRatio  :state.externalCtRatio,
    labNo  :state.labNo,
    type  :state.type,
    revImpKwh  :state.revImpKwh,
    meterCTRatio  :state.meterCTRatio,
    meterMake  :state.meterMake,
    scaleFactor  :state.scaleFactor,
    overallMFForUnit  :state.overallMFForUnit,
    freq  :state.freq,
    whetherMeterDataReadThroughMriLaptop  :state.whetherMeterDataReadThroughMriLaptop,
    whetherDataCollectedSuccessfully  :state.whetherDataCollectedSuccessfully,
    ifNoSpecifyReason  :state.ifNoSpecifyReason,
    onMeterBox  :state.onMeterBox,
    onMeterBody  :state.onMeterBody,
    onMeterTerminalCover  :state.onMeterTerminalCover,
    onOpticalPort  :state.onOpticalPort,
    ctBoxIfAny  :state.ctBoxIfAny,
    other  :state.other,
    capacitorInstalled  :state.capacitorInstalled,
    adequateOrNot  :state.adequateOrNot,
    meterInstalledAt  :state.meterInstalledAt,
    meterInstalledAtEyesight  :state.meterInstalledAtEyesight,
    otherObservations  :state.otherObservations,
    whetherMeterServiceKeptUnderObservation  :state.whetherMeterServiceKeptUnderObservation,
    cap_adequate  :state.cap_adequate,
    irregularitiesObserved  :state.irregularitiesObserved,
    inspect_serv  :state.inspect_serv,
    under_obser  :state.under_obser,
    remed_action  :state.remed_action,
    instruct_consum  :state.instruct_consum,
    instruct_bill :state.instruct_bill,
    date:state.date,
    time:state.time
    </div>
  )
}
